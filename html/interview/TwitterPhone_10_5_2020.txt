他自己出的一个问题. Pagination.

given a List of String, pagination those string.

1. each page has at most 12 chars
2. no duplicate, if there is duplicate, go to the next page.
3. preserve the order.


input ['a, 'b', 'c', 'a', 'b', 'x'];
output [a, b, c, x], ['a', 'b];


Solution: o(n). parse the array, and mark the category group. and meet the requirement.


List<StringBuilder> pagination(String input){

    char[] data = input.split(",");

    int[] dict = new int[26];

    int[] flow = new int[data.lenght];

    for( int i=0; i<flow.length; i++){
         char c = flow[i];
         int page = dict[c];


         while( !checkCapacit(flow, limit, page)){     // req1. at most 12 chars 
             page++;
         }
                          //////////////////////////// 这里的逻辑没有写对。 可能index会off
         flow[i] = page++;  // req2: no duplicate on the same page.
         dict[i] = flow[i]
    }
}

// 这种仿真的题目还真不一定能写对，可能会有些逻辑不那么好写。