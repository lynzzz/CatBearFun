Convert BST to doubly linkedlist.

用Divide and conquer 硬是没写出来

https://www.geeksforgeeks.org/convert-given-binary-tree-doubly-linked-list-set-3/

// convert a BST into doubly linked list.
//    3
//  1    5
//     4   7
//
// 1 <--> 3 <--> 5
// struct Node {
//     Node* left;
//     Node* right;
//     int val;
//



class Node {
     Node left;
     Node right;
     int val;
     Node(int val){
         this.val = val;
     }
}


public class Solution {


 public static void main(String[] args) {
       
       
//    3
//  1    5
//     4   7
//
    
    Node n1 = new Node(1);
    Node n3 = new Node(3);
    Node n4 = new Node(4);
    Node n5 = new Node(5);
    Node n7 = new Node(7);
    
    n3.left = n1;
    n3.right = n5;
    
    n5.left = n4;
    n5.right = n7; 
    
    
    Node root = n3;
    Node saveRoot = root;
    while(root != null && root.left != null){
        root = root.left;
    }
    
    Node newroot = root;
    
    helper(saveRoot);
    
    print(newroot);
    
}

 static void  print(Node root){
    while(root != null){
        System.out.println(root.val);
        root = root.right;
    }
}


 static Node  helper(Node root){
   if ( root == null) return null;
   
   // divide
   Node left = helper(root.left);
   Node right = helper(root.right);
   
   
   // 
   if ( left != null){
      left.right = root;
      root.left = left;
   }
   
   if ( right != null){
     root.right = right;
     right.left = root;
   }
   
   return root;
}
}







