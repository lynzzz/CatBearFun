1. 想好算法后在写，永远是思考的速度远远慢于写代码的速度。
2. LC打开原题直接抄，不要去想，这样保证是正确的而且快，可以做更多的题目。 LC->Google search(geeksforgeeks)
3. 每轮45分钟，开始5分钟icebreak, 最后5分钟问问题，35分钟两道medium, 要快只做一道一般过不了。
4. 简单的东西用helper function，（问需不需要实现，这样节约时间）
5. 代码尽量使用Syntax sugar。(getOrDefault, putIfAbsent)
6. 如果没有搞清楚需求，一定要让他给Examples, 直到搞清楚所有case结果在写，不然就是写出来后他说有bug,你说没有。
   最后你无法理解，怀疑自己。Fb phone第一轮
7. 每个公司都有自己的经典题库，要单独准备，直接面做不出来（dropbox, twitter)
8. 用草稿纸建模型，发现用自己大脑建立模型无法把琐碎的东西拼凑到一起。
9. 他不开摄像头你就不要开，这样你可以直接抄LC



算法题目脑子里不能直接建立完整的解题模型。 
解决方法： 
1. 用草稿纸打草稿
2. 看答案反过来想想自己卡在哪里了。



Coding 
时间：白天刷题

1. 按照类刷
2. 总结模板，题目都往模板上面套，能识别模板衍生出来的题目
3. 每道题目不光是要做出来，要去看最优的解法。（fb没有用最优挂了，因为没有去看最优解法）


Design
时间： 平时上班的时候晚上看design， 晚上刷题目效率非常底
